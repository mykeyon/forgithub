vue基础：
  1.历史介绍：
    angular 09年，年份比较早，一开始大家比较拒绝
    react   13年，用户体验比较好
    vue     14年，用户必要好，尤雨溪
  2.前端框架和库的区别？
    jQuery库 -> DOM(操作DOM) + 请求
    art-template库 -> 模板引擎
    框架 = 全方位功能齐全
      简易的DOM体验 + 发请求 + 模板引擎 + 路由功能

      代码上的不同：
        一般使用库的代码，是调用某个函数，我们自己把控库的代码。
        一般使用框架，其框架再帮我们运行我们编写好的代码
          框架：初始化自身的一些行为。
            执行你所编写的代码。
            释放一些资源。
  3.Vue起步
    1.引包
    2.启动new Vue(el:目的地 template: 模板内容);
    3.options
      目的地el
      内容template
      数据data 保存数据属性
        数据驱动视图
    vue的文件介绍
    4.插值表达式
      {{表达式}}
        对象不要连续3个{{ {name: "jack"} }}
        字符串 {{ "XXX" }}
        判断后的布尔值 {{ true }}
        三元表达式 {{ true ? "正确" : "错误" }}
      可以用于页面中简单的粗暴的调试
      注意：必须再data这个函数中返回的对象中声明
    5.什么是指令
      1.vue中提供饿了一些用于页面 + 数据的更为方便的输出，这些操作就叫做指令，以v-xxx 表示
          比如html页面中的属性 <div v-xxx></div>
      2.比如再angular中以 ng-xxx 开头的叫指令
      3.再vue中以v-xxx 开头的叫指令
      4.指令中封装了那些DOM的行为，结合属性作为一个暗号，安好有对应的值，根据不同的值，
        框架会进行相关DOM操作的绑定。
    6.vue中常用的v-指令
      1.v-text 元素的InnerText属性，必须是双标签跟{{}}效果是一样的，使用比较少
      2.v-html 元素的innerHTML
      3.v-if 判断是否插入这个元素，相当于对元素的销毁和创建。
      4.v-else-if
      5.v-else
      6.v-show 隐藏元素，如果确定要隐藏，会给元素的style加上display:none,是基于css
        样式的切换。
    7.v-if和v-show的区别
      v-if 是 真正的条件渲染，因为它会确保在切换过程中条件快内的时间监听器和子组件适当
        地被销毁和重建。
      v-if 也是惰性的，如果在初始渲染时条件为假，则什么也不做 -- 直到条件第一次为真时，
        才会开始渲染条件块。
      相比之下，v-show 就简单多了，不管初始条件时什么，元素总是会被渲染，并且只是简单
        的基于CSS进行切换。
      一般来说，v-if 有更高的切换开销，而v-show 有更高的初始渲染开销。因此，如果需要非
        常频繁地切换，则使用v-show较好。如果在运行时条件很少改变，则使用v-if较好。
    8.v-bind使用
      1.给元素的属性赋值<div v-bind = "{{变量}}"></div>
        可以给已经存在的属性赋值 input value
        也可以给自定义属性赋值 mydata
      2.语法在元素上 v-bind:属性名="常量 || 变量名"
      3.简写形式 :属性名 = "变量名"  
